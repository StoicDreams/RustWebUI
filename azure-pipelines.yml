
trigger:
- main

stages:
- stage: Alpha
  jobs:
  - job: Build
    displayName: 'Build Website'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: PowerShell@2
        displayName: 'Set Build Target'
        inputs:
          targetType: 'inline'
          script: |
            rustup target add wasm32-unknown-unknown
      - task: PowerShell@2
        displayName: 'Run Tests'
        inputs:
          targetType: 'inline'
          script: |
            $test_results = cargo test --release | Out-String

            if ($test_results.Contains("test result: FAILED")) {
              throw "Tests Failed"
            }
      - task: PowerShell@2
        displayName: 'Install Trunk'
        inputs:
          targetType: 'inline'
          script: |
            cargo install trunk
      - task: PowerShell@2
        displayName: 'Build Web App'
        inputs:
          targetType: 'inline'
          script: |
            # Change directory to webapp
            cd webapp

            # Build
            trunk build --release
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/webapp/dist'
          ArtifactName: 'drop'
          publishLocation: 'Container'
  - job: Release
    displayName: 'Deploy to Azure'
    dependsOn:
    - Build
    condition: succeeded()
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: AzureCLI@2
        displayName: 'Remove Old Files'
        inputs:
          azureSubscription: '$(azureSubscription)'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: 'az storage blob delete-batch -s ''$web'' --account-name $(accountName)'
      - task: AzureFileCopy@2
        displayName: 'AzureBlob File Copy'
        inputs:
          SourcePath: '$(System.DefaultWorkingDirectory)'
          azureSubscription: $(azureConnection)
          Destination: AzureBlob
          storage: $(accountName)
          ContainerName: '$web'
      - task: AzureCLI@2
        displayName: 'Set Correct Content-Type Attributes'
        inputs:
          azureSubscription: '$(azureSubscription)'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az storage blob update -c '$web' -n *.wasm --account-name $(accountName) --content-type application/wasm
      - task: AzureCLI@2
        displayName: 'Purge Storage Cache'
        inputs:
          azureSubscription: $(azureConnection)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: 'az cdn endpoint purge -g $(resourceGroup) -n $(accountName) --profile-name $(profileName) --content-paths ''/*'''